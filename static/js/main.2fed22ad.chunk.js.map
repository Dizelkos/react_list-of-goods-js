{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_TYPE_ABC","SORT_TYPE_LENGTH","App","useState","sortType","setSortType","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","map","item","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAgB,MAChBC,EAAmB,SA2BlB,IAAMC,EAAM,WACjB,MAAgCC,mBA9BX,IA8BrB,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAA1B,GAA2D,IAAxBL,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,UACrCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAMcO,CACnBlB,EAAiB,CAAEK,WAAUE,cAY/B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAYL,IAC3BoB,KAAK,SACLF,UAAWG,IACT,SAAU,UAAW,CACnB,WAAYjB,IAAaJ,IAL/B,iCAYA,wBACEmB,QAAS,kBAAMd,EAAYJ,IAC3BmB,KAAK,SACLF,UAAWG,IACT,SAAU,aAAc,CACtB,WAAYjB,IAAaH,IAL/B,4BAYA,wBACEkB,QArCQ,WACdZ,GAAcD,IAqCRc,KAAK,SACLF,UAAWG,IACT,SAAU,aAAc,CACtB,YAAaf,IALnB,qBAYCF,GACC,wBACEe,QA9CI,WACZd,EAzCmB,IA0CnBE,GAAa,IA6CLa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCjHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2fed22ad.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE_NONE = '';\nconst SORT_TYPE_ABC = 'abc';\nconst SORT_TYPE_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortType, isReverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_TYPE_ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_TYPE_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SORT_TYPE_NONE);\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortType, isReverse },\n  );\n\n  const reverse = () => {\n    setIsReverse(!isReverse);\n  };\n\n  const reset = () => {\n    setSortType(SORT_TYPE_NONE);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SORT_TYPE_ABC)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-info', {\n              'is-light': sortType !== SORT_TYPE_ABC,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SORT_TYPE_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-success', {\n              'is-light': sortType !== SORT_TYPE_LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn(\n            'button', 'is-warning', {\n              'is-light': !isReverse,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {sortType && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li\n            key={item}\n            data-cy=\"Good\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}